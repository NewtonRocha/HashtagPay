// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TagPay.Backoffice.Api;

namespace TagPay.Backoffice.Api.Migrations
{
    [DbContext(typeof(TagPayContext))]
    [Migration("20170819160115_updateData")]
    partial class updateData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FacebookId");

                    b.Property<string>("FacebookKey");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.BuyerCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyerId");

                    b.Property<string>("CardId");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("BuyersCard");
                });

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FacebookId");

                    b.Property<string>("FacebookKey");

                    b.Property<string>("RecipientId");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.SellerBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankId");

                    b.Property<int?>("SellerId");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("SellerBank");
                });

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.BuyerCard", b =>
                {
                    b.HasOne("TagPay.Backoffice.Api.Models.Buyer", "Buyer")
                        .WithMany("CardIds")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TagPay.Backoffice.Api.Models.SellerBank", b =>
                {
                    b.HasOne("TagPay.Backoffice.Api.Models.Seller", "Seller")
                        .WithMany("BankIds")
                        .HasForeignKey("SellerId");
                });
#pragma warning restore 612, 618
        }
    }
}
